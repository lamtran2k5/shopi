services:
  web:
    image: nginx:latest # Using the default Nginx image with custom configuration.
    volumes:
      # Mount the application code for live updates
      - ./web:/var/www/html
      # Mount the Nginx configuration file
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      # Map port 80 inside the container to the port specified by 'NGINX_PORT' on the host machine
      - "8080:80"
    environment:
      - NGINX_HOST=localhost
    networks:
      - laravel-development
    depends_on:
      - php-fpm


  php-fpm:
    # For the php-fpm service, we will use our common PHP-FPM Dockerfile with the development target
    build:
      context: .
      dockerfile: /docker/php/Dockerfile
    env_file:
      # Load the environment variables from the Laravel application
      - ./web/.env
    #user: "${UID:-1000}:${GID:-1000}"
    volumes:
      # Mount the application code for live updates
    - ./web:/var/www/html
    - vendor-data:/var/www/html/vendor
    networks:
      - laravel-development
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: shopi
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    networks:
      - laravel-development
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: shopi-phpmyadmin
    restart: unless-stopped
    ports:
      - "8888:80"      # Truy cập phpMyAdmin trên localhost:8081
    environment:
      PMA_HOST: mysql   # Tên service MySQL
      PMA_PORT: 3306
      PMA_USER: laravel
      PMA_PASSWORD: secret
    depends_on:
      - mysql
    networks:
      - laravel-development

  redis:
    image: redis:alpine
    networks:
      - laravel-development

networks:
  laravel-development:

volumes:
  vendor-data:

